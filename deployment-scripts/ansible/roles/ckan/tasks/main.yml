---
- name: Stop CKAN
  command: supervisorctl stop ckan

- name: Checkout CKAN 2.2 from git
  git: repo=https://github.com/ckan/ckan.git
         dest="{{ckan_src}}"
         version=ckan-2.2

- name: Download patch for CKAN
  get_url: url=https://github.com/ckan/ckan/commit/fa60dc947eb6db612218d8d89affec7d6df3b096.patch dest="{{src_dir}}/ckan_fix.patch"

- name: Patch CKAN
  command: git apply {{src_dir}}/ckan_fix.patch
  args:
    chdir: "{{ckan_src}}"

- name: install pip
  easy_install: name=pip executable=easy_install-2.7

- name: install virtualenv
  easy_install: name=virtualenv executable=easy_install-2.7

- name: Install CKAN dependencies
  pip: requirements={{ckan_src}}/requirements.txt virtualenv="{{virtual_envs}}/ckan"

- name: Install CKAN
  pip: name="{{ckan_src}}/." virtualenv="{{virtual_envs}}/ckan"

- name: Create ckan etc default
  file: path="{{ ckan_etc }}/default" state=directory

- name: Remove development.ini
  file: path="{{ckan_ini}}" state=absent

- name: Generate development.ini
  shell: source {{ckan_env}}/bin/activate && paster make-config ckan {{ckan_ini}}

- name: Edit development.ini
  ini_file: dest="{{ckan_ini}}"
              section=server:main
              option=host
              value=127.0.0.1

- ini_file: dest="{{ckan_ini}}"
              section=server:main
              option=port
              value="{{ckan_port}}"

- ini_file: dest="{{ckan_ini}}"
              section=app:main
              option=sqlalchemy.url
              value=postgresql://ckan_default:ckan_test1@localhost/ckan_default

- ini_file: dest="{{ckan_ini}}"
              section=app:main
              option=ckan.datastore.write_url
              value=postgresql://ckan_default:ckan_test1@localhost/datastore_default

# Commented to enable legacy mode and solve set-permission.sql not found issue
# - ini_file: dest="{{ckan_ini}}"
#               section=app:main
#               option=ckan.datastore.read_url
#               value=postgresql://datastore_default:ckan_test1@localhost/datastore_default

- ini_file: dest="{{ckan_ini}}"
              section=app:main
              option=solr_url
              value="{{solr_url}}"

- ini_file: dest="{{ckan_ini}}"
              section=app:main
              option=ckan.datapusher.url
              value="{{datapusher_url}}"

- ini_file: dest="{{ckan_ini}}"
              section=app:main
              option=ckan.storage_path
              value="{{ckan_env}}"

- ini_file: dest="{{ckan_ini}}"
              section=app:main
              option=ckan.site_url
              value="{{ckan_url}}"

- ini_file: dest="{{ckan_ini}}"
              section=app:main
              option=ckan.plugins
              value="stats text_preview recline_preview pdf_preview datastore datapusher resource_proxy multilingual_dataset multilingual_group multilingual_tag odm_theme odm_utils pages googleanalytics geojson_preview wms_preview"

- ini_file: dest="{{ckan_ini}}"
              section=app:main
              option=ckan.auth.anon_create_dataset
              value="false"

- ini_file: dest="{{ckan_ini}}"
              section=app:main
              option=ckan.auth.create_unowned_dataset
              value="false"

- ini_file: dest="{{ckan_ini}}"
              section=app:main
              option=ckan.auth.create_dataset_if_not_in_organization
              value="false"

- ini_file: dest="{{ckan_ini}}"
              section=app:main
              option=ckan.auth.user_create_groups
              value="false"

- ini_file: dest="{{ckan_ini}}"
              section=app:main
              option=ckan.auth.user_create_organizations
              value="false"

- ini_file: dest="{{ckan_ini}}"
              section=app:main
              option=ckan.auth.user_delete_groups
              value="false"

- ini_file: dest="{{ckan_ini}}"
              section=app:main
              option=ckan.auth.user_delete_organizations
              value="false"

- ini_file: dest="{{ckan_ini}}"
              section=app:main
              option=ckan.activity_streams_email_notifications
              value="True"

- ini_file: dest="{{ckan_ini}}"
              section=app:main
              option=smtp.mail_from
              value="{{email_account}}"

- ini_file: dest="{{ckan_ini}}"
              section=app:main
              option=smtp.server
              value="{{email_server}}"

- ini_file: dest="{{ckan_ini}}"
              section=app:main
              option=smtp.starttls
              value="True"

- ini_file: dest="{{ckan_ini}}"
              section=app:main
              option=smtp.user
              value="{{email_user}}"

- ini_file: dest="{{ckan_ini}}"
              section=app:main
              option=smtp.starttls
              value="{{email_password}}"

- ini_file: dest="{{ckan_ini}}"
              section=app:main
              option=googleanalytics.id
              value="{{googleanalytics_id}}"

- ini_file: dest="{{ckan_ini}}"
              section=app:main
              option=googleanalytics.account
              value="{{googleanalytics_account}}"

- ini_file: dest="{{ckan_ini}}"
              section=app:main
              option=googleanalytics.username
              value="{{googleanalytics_username}}"

- ini_file: dest="{{ckan_ini}}"
              section=app:main
              option=googleanalytics.password
              value="{{googleanalytics_password}}"

- name: Create cron job for sending out email notifications
  cron: name="Schedule email notifications" special_time="hourly" job="source {{ckan_env}}/bin/activate && echo '{}' | paster --plugin=ckan post -c {{ckan_ini}} /api/action/send_email_notifications > /dev/null" state="present"

- name: Link who.ini
  file: src="{{ckan_env}}/lib/python2.7/site-packages/ckan/config/who.ini" dest="{{ ckan_etc }}/default/who.ini" state=link

- name: Install CKAN Api
  pip: name="git+https://github.com/ckan/ckanapi.git@ckanapi-3.3#egg=ckanapi" virtualenv="{{virtual_envs}}/ckan"

- name: CKAN Api Develop
  shell: source {{ckan_env}}/bin/activate && python setup.py develop
  args:
    chdir: "{{virtual_envs}}/ckan/src/ckanapi"

- name: Install ckanext-odm_utils
  file: path="{{ ckan_env }}/src/ckanext-odm_utils" state=directory

- git: repo=https://github.com/OpenDevelopmentMekong/ckanext-odm_utils.git
        dest="{{ ckan_env }}/src/ckanext-odm_utils"

- shell: source {{ckan_env}}/bin/activate && python setup.py develop
  args:
    chdir: "{{ ckan_env }}/src/ckanext-odm_utils"

- name: Install ckanext-odm_theme
  file: path="{{ ckan_env }}/src/ckanext-odm_theme" state=directory

- git: repo=https://github.com/OpenDevelopmentMekong/ckanext-odm_theme.git
        dest="{{ ckan_env }}/src/ckanext-odm_theme"

- shell: source {{ckan_env}}/bin/activate && python setup.py develop
  args:
    chdir: "{{ ckan_env }}/src/ckanext-odm_theme"

- name: Install Datapusher extension
  git: repo=https://github.com/ckan/datapusher.git version=stable
        dest="{{ ckan_env }}/src/datapusher"

- pip: requirements="{{ckan_env}}/src/datapusher/requirements.txt" extra_args="-e {{ckan_env}}/src/datapusher/" virtualenv="{{virtual_envs}}/ckan"

- name: Install pages extension
  pip: name="git+https://github.com/ckan/ckanext-pages.git#egg=ckanext-pages" virtualenv="{{virtual_envs}}/ckan"

- shell: source {{ckan_env}}/bin/activate && python setup.py develop
  args:
    chdir: "{{ ckan_env }}/src/ckanext-pages"

- name: Install ckanext-spatial extension (Just for Preview for spatial formats)
  pip: name="git+https://github.com/okfn/ckanext-spatial.git@stable#egg=ckanext-spatial" virtualenv="{{virtual_envs}}/ckan"

- name: Install  ckanext-spatial extension dependencies
  pip: requirements={{ckan_env}}/src/ckanext-spatial/pip-requirements.txt virtualenv="{{virtual_envs}}/ckan"

- shell: source {{ckan_env}}/bin/activate && python setup.py develop
  args:
    chdir: "{{ ckan_env }}/src/ckanext-spatial"

- name: Install Google Analytics extension
  pip: name="git+https://github.com/ckan/ckanext-googleanalytics.git#egg=ckanext-googleanalytics" virtualenv="{{virtual_envs}}/ckan"

- shell: source {{ckan_env}}/bin/activate && python setup.py develop
  args:
    chdir: "{{ ckan_env }}/src/ckanext-googleanalytics"

- name: Initialize database
  shell: source {{ckan_env}}/bin/activate && paster --plugin=ckan db init --config={{ckan_ini}}

# Uncomment when legacy mode is disabled
# - name: Setup the DataStore
#   shell: source {{ckan_env}}/bin/activate && paster --plugin=ckan datastore set-permissions postgres --config={{ckan_ini}}

- name: Start CKAN
  command: supervisorctl start ckan
