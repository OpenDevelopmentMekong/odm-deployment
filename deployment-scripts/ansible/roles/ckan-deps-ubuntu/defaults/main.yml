---
apache:
  profile: standalone
  profiles:
    - standalone
    - backend
  listen:
    - '*:80'
    - '127.0.0.1:80'
  default_vhost_path: /etc/apache2/sites-available/wp.vagrantbox.conf
  modules:
    required:
      - authn_core
      - access_compat
      - alias
      - authz_core
      - authz_host
      - authz_user
      - dir
      - env
      - mime
      - mpm_prefork
      - reqtimeout
      - rewrite
      - status
    standalone:
      - filter
      - deflate
      - ssl
    backend:
      - rpaf
      # Do not really need filter and deflate modules for backend... but
      # currently Apache module dependencies problem is unsolvable :(
      # @todo: find a solution for disabling modules in right order
      - filter
      - deflate

vhosts:
  'wp.vagrantbox':
    enabled: yes
    listen:
      - '*:80'
      - '127.0.0.1:80'
    root: "{{wp_dir}}"
    name: wp.vagrantbox
    aliases:
      - wp.vagrantbox
      - 127.0.0.1:80
    settings: |
  'tomcat.vagrantbox':
    enabled: yes
    listen:
      - '*:{{tomcat_port}}'
      - '127.0.0.1:tomcat_port'
    root: "{{tomcat_dir}}"
    name: tomcat.vagrantbox
    aliases:
      - tomcat.vagrantbox
      - 127.0.0.1:{{tomcat_port}}
    settings: |
  'ckan.vagrantbox':
    enabled: yes
    listen:
      - '*:{{ckan_port}}'
      - '127.0.0.1:{{ckan_port}}'
    root: "{{ckan_src}}"
    name: ckan.vagrantbox
    aliases:
      - ckan.vagrantbox
      - 127.0.0.1:{{ckan_port}}
    settings: |
  'datapusher.vagrantbox':
    enabled: yes
    listen:
      - '*:{{datapusher_port}}'
      - '127.0.0.1:{{datapusher_port}}'
    root: "{{ckan_src}}/ckanext/datapusher"
    name: datapusher.vagrantbox
    aliases:
      - datapusher.vagrantbox
      - 127.0.0.1:{{datapusher_port}}
    settings: |
  # 'example.vagrantbox':
  #   enabled: yes
  #   listen:
  #     - '*:8800'
  #     - '127.0.0.1:8800'
  #   root: "{{ckan_src}}/ckanext/datapusher"
  #   name: datapusher.vagrantbox
  #   aliases:
  #     - datapusher.vagrantbox
  #     - 127.0.0.1
  #   settings: |
  #     <IfModule proxy_http_module>
  #       ProxyPass /Content http://n.km-school.ru:8085/Content
  #       ProxyPassReverse /Content http://n.km-school.ru:8085/Content
  #     </IfModule>
  #     Alias /Content2 /var/www/content2
