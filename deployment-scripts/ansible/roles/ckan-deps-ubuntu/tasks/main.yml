---
- name: Install python-pip
  apt: name=python-pip state=present
  sudo: yes

- name: install pip
  easy_install: name=pip executable=easy_install-2.7
  sudo: yes

- name: install virtualenv
  easy_install: name=virtualenv executable=easy_install-2.7
  sudo: yes

- name: Install git-core
  apt: name=git-core state=present
  sudo: yes

- name: Install libxslt-dev
  apt: name=libxslt-dev state=present
  sudo: yes

- name: Install libxslt1-dev
  apt: name=libxslt1-dev state=present
  sudo: yes

- name: Install libxslt1.1
  apt: name=libxslt1.1 state=present
  sudo: yes

- name: Install libxml2
  apt: name=libxml2 state=present
  sudo: yes

- name: Install libxml2-dev
  apt: name=libxml2-dev state=present
  sudo: yes

- name: Install python-libxml2
  apt: name=python-libxml2 state=present
  sudo: yes

- name: Install python-libxslt1
  apt: name=python-libxslt1 state=present
  sudo: yes

- name: Install libssl-dev
  apt: name=libssl-dev state=present
  sudo: yes

- name: Install build-essential
  apt: name=build-essential state=present
  sudo: yes

- name: Install python-dev
  apt: name=python-dev state=present
  sudo: yes

- name: Install postgresql
  apt: name=postgresql state=present
  sudo: yes

- name: Install libpq-dev
  apt: name=libpq-dev state=present
  sudo: yes

- name: Install libpq5
  apt: name=libpq5 state=present
  sudo: yes

- name: Install zlib1g-dev
  apt: name=zlib1g-dev state=present
  sudo: yes

- name: Install python-setuptools
  apt: name=python-setuptools state=present
  sudo: yes

- name: Install openjdk-6-jdk
  apt: name=openjdk-6-jdk state=present
  sudo: yes

- name: Install psycopg2
  easy_install: name=psycopg2 executable=easy_install-2.7
  sudo: yes

- name: Create virtualenv
  shell: virtualenv --no-site-packages {{virtual_envs}}/ckan

- name: Install lxml
  shell: source {{virtual_envs}}/ckan/bin/activate && CFLAGS="-O0" pip install lxml executable=/bin/bash
  sudo: yes

- name: Replace pg_hba.conf
  template: src=pg_hba.conf.j2 dest="{{pg_main}}/pg_hba.conf"
  sudo: yes

- name: Restart postgresql
  service: name=postgresql state=restarted
  sudo: yes

- name: Setup database users (ckan_default)
  postgresql_user: name=ckan_default password=ckan_test1 role_attr_flags=SUPERUSER

- name: Setup databases and users (ckan_default)
  postgresql_db: name=ckan_default owner=ckan_default encoding='UTF-8' state=present

# - name: Setup database users (datastore_default)
#   postgresql_user: name=datastore_default password=ckan_test1 db=datastore_default role_attr_flags=NOSUPERUSER

- name: Setup databases and users (datastore_default)
  postgresql_db: name=datastore_default owner=ckan_default encoding='UTF-8' state=present

- name: Install Apache 2
  apt: name=apache2 state=present
  sudo: yes

- name: Copy Apache configuration file
  template: src="{{ apache.profile }}.conf.j2" dest=/etc/apache2/conf-available/{{ apache.profile }}.conf mode=0644
  sudo: yes

- name: Activate configuration
  command: a2enconf {{ apache.profile }} chdir=/etc/apache2/conf-available/ creates=/etc/apache2/conf-enabled/{{ apache.profile }}.conf
  sudo: yes
  notify: apache-reload

- name: Deactivate old configuration
  command: a2disconf {{ item }}.conf removes=/etc/apache2/conf-enabled/{{ item }}.conf
  sudo: yes
  with_items: apache.profiles
  when: item != apache.profile
  notify: apache-reload

- name: Remove previous profile configuration file
  file: path=/etc/apache2/conf-available/{{ item }}.conf state=absent
  sudo: yes
  with_items: apache.profiles
  when: item != apache.profile
  notify: apache-reload

- name: Set Listen port
  lineinfile:
    dest=/etc/apache2/ports.conf
    regexp='^Listen '
    line="Listen {{ apache.listen|join(' ') }}"
  sudo: yes
  notify: apache-reload

# Ensure Apache is a service

- name: Enable/disable Apache as service
  service: name=apache2 enabled=yes
  sudo: yes

# Working with Apache modules

- name: Retrieve a list of packaged Apache modules (libapache2-mod-{module})
  shell: apt-cache search "libapache2-mod-" | cut -s -f 1 -d ' ' | grep libapache2 | sed 's/libapache2-mod-//g'
  register: apache_packaged_modules

# There is so complicated expression in pkg section because of very agressive
# optimization of with_items operator in apt module.
# @see https://github.com/ansible/ansible/issues/8314
- name: Install requried modules if they not installed yet
  apt: name={{ "libapache2-mod-" ~ item.split(",")|join(",libapache2-mod-") }}
  sudo: yes
  with_items: ((apache.modules.required | union(apache.modules[apache.profile])) | intersect(apache_packaged_modules.stdout_lines))

- name: Retrieve a list of loaded shared Apache modules
  shell: apachectl -M | grep '_module (shared)' | sed 's/_module (shared)//;s/ //' | sort -r
  register: apache_loaded_modules
  sudo: yes

- name: Disable unnecessary modules
  command: a2dismod {{ item }}
  sudo: yes
  with_items: apache_loaded_modules.stdout_lines
  when: item not in (apache.modules.required | union(apache.modules[apache.profile]))
  notify: apache-restart
  ignore_errors: yes

- name: Enable required modules
  command: a2enmod {{ item }}
  sudo: yes
  with_items: (apache.modules.required | union(apache.modules[apache.profile])) | list
  when: item not in apache_loaded_modules.stdout_lines
  notify: apache-restart
  ignore_errors: yes

- name: Remove unused packaged modules
  apt: name=libapache2-mod-{{ item }} state=absent
  sudo: yes
  with_items: (apache_loaded_modules.stdout_lines | intersect(apache_packaged_modules.stdout_lines)) | list
  when: item not in (apache.modules.required | union(apache.modules[apache.profile]))

# Working with Apache virtual hosts

- name: Adding/removing Apache virtual hosts
  include: vhost.yml

- name: Adding vagrant to the www-data group
  user: name="{{ansible_ssh_user}}" groups=vagrant,www-data
  sudo: yes
